name: E2E Tests

on:
  pull_request:
    paths:
      - "apps/web/**"
      - "packages/prisma/**"
      - "pnpm-workspace.yaml"
      - "package.json"
      - "pnpm-lock.yaml"
    branches:
      - main
  push:
    paths:
      - "apps/web/**"
      - "packages/prisma/**"
      - "pnpm-workspace.yaml"
      - "package.json"
      - "pnpm-lock.yaml"
    branches:
      - main

jobs:
  e2e:
    timeout-minutes: 10
    runs-on: ubuntu-latest
    env:
      DATABASE_URL: postgresql://postgres:postgres@127.0.0.1:54322/postgres
      DIRECT_URL: postgresql://postgres:postgres@127.0.0.1:54322/postgres
    steps:
      - name: コードをチェックアウト
        uses: actions/checkout@v5
      - name: pnpmをセットアップ
        uses: pnpm/action-setup@v4
      - name: Node.jsをセットアップ
        uses: actions/setup-node@v6
        with:
          node-version-file: .node-version
          cache: pnpm
      - name: 依存関係をインストール
        run: pnpm install
      - name: Supabase CLIをセットアップ
        uses: supabase/setup-cli@v1
        with:
          version: latest
      - name: Supabaseを起動
        working-directory: packages/supabase
        run: supabase start
      - name: Prismaマイグレーションを実行
        run: pnpm --filter @repo/prisma db:deploy
      - name: Prisma Clientを生成
        run: pnpm --filter @repo/prisma db:generate
      - name: データベースにシードデータを投入
        run: pnpm --filter @repo/prisma db:seed
      - name: Playwrightブラウザをインストール
        run: pnpm --filter web exec playwright install --only-shell
      - name: E2Eテストを実行
        run: pnpm --filter web test:e2e
      - name: テストレポートをアップロード
        uses: actions/upload-artifact@v5
        if: always()
        with:
          name: playwright-report
          path: apps/web/playwright-report/
          retention-days: 5
